@* @model EbookStore.Models.Book *@

@* <!DOCTYPE html> *@
@* <html lang="en"> *@
@* <head> *@
@*     <meta charset="UTF-8"> *@
@*     <meta name="viewport" content="width=device-width, initial-scale=1.0"> *@
@*     <title>@Model.Title - Details</title> *@
@*     <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet"> *@
@*     <style> *@
@*         body, html { *@
@*             margin: 0; *@
@*             padding: 0; *@
@*             height: 100%; *@
@*             overflow: hidden; /* Prevent unnecessary scrollbars */ *@
@*         } *@

@*         .container { *@
@*             width: 100%; *@
@*             max-width: 1200px; /* Adjust based on design */ *@
@*             margin: 0 auto; *@
@*             padding: 20px; *@
@*             box-sizing: border-box; *@
@*             flex: 1; /* Ensures content grows while pushing footer down */ *@
@*         } *@


@*         .book-details { *@
@*             display: flex; *@
@*             flex-direction: row; *@
@*             align-items: center; *@
@*             justify-content: space-between; *@
@*             flex-wrap: wrap; *@
@*             gap: 20px; *@
@*         } *@

@*         .book-cover img { *@
@*             max-width: 100%; *@
@*             height: auto; *@
@*         } *@

@*         .book-info { *@
@*             flex: 1 1 60%; *@
@*             text-align: left; *@
@*         } *@

@*         .book-description { *@
@*             margin-top: 20px; *@
@*             line-height: 1.6; *@
@*         } *@

@*         .book-header { *@
@*             display: flex; *@
@*             flex-direction: row; *@
@*             gap: 30px; *@
@*             align-items: center; *@
@*             justify-content: center; *@
@*         } *@

@*         .book-image img { *@
@*             width: 100%; *@
@*             max-width: 300px; *@
@*             border-radius: 10px; *@
@*         } *@

@*         .book-info { *@
@*             flex: 1; *@
@*             padding: 20px; *@
@*         } *@

@*             .book-info h1 { *@
@*                 font-size: 2.5rem; *@
@*                 margin-bottom: 10px; *@
@*             } *@

@*         .price, .discount-price { *@
@*             font-size: 1.5rem; *@
@*             margin-bottom: 10px; *@
@*         } *@

@*         .description { *@
@*             line-height: 1.6; *@
@*             margin: 20px 0; *@
@*         } *@

@*         .buttons { *@
@*             display: flex; *@
@*             gap: 10px; *@
@*         } *@

@*         .button { *@
@*             padding: 10px 15px; *@
@*             text-decoration: none; *@
@*             color: #fff; *@
@*             border-radius: 5px; *@
@*             font-weight: bold; *@
@*         } *@

@*         .buy-btn { *@
@*             background-color: #3498db; *@
@*         } *@

@*         .cart-btn { *@
@*             background-color: #27ae60; *@
@*         } *@

@*         .borrow-btn { *@
@*             background-color: #f39c12; *@
@*         } *@

@*         .rating-section { *@
@*             margin-top: 20px; *@
@*             display: flex; *@
@*             flex-direction: column; *@
@*             gap: 10px; *@
@*         } *@

@*         .rating-stars input { *@
@*             display: none; *@
@*         } *@

@*         .rating-stars label { *@
@*             font-size: 2rem; *@
@*             color: #ccc; *@
@*             cursor: pointer; *@
@*         } *@

@*             .rating-stars input:checked ~ label, *@
@*             .rating-stars label:hover, *@
@*             .rating-stars label:hover ~ label { *@
@*                 color: #ff9800; *@
@*             } *@

@*         .comment-section textarea { *@
@*             width: 100%; *@
@*             height: 100px; *@
@*             padding: 10px; *@
@*             border-radius: 5px; *@
@*             border: 1px solid #ddd; *@
@*             resize: none; *@
@*         } *@

        
      
@*         .submit-btn { *@
@*             background-color: #e67e22; *@
@*             color: #fff; *@
@*             border: none; *@
@*             padding: 10px 15px; *@
@*             font-size: 1rem; *@
@*             border-radius: 5px; *@
@*             cursor: pointer; *@
@*         } *@

@*             .submit-btn:hover { *@
@*                 background-color: #d35400; *@
@*             } *@

@*         .file-upload { *@
@*             margin-top: 10px; *@
@*         } *@
@*     </style> *@
@* </head> *@
@* <body> *@
@*     <div class="container"> *@
@*         <!-- Book Header --> *@
@*         <div class="book-header"> *@
@*             <div class="book-image"> *@
@*                 <img src="@Url.Content(Model.ImageUrl)" alt="@Model.Title"> *@
@*             </div> *@
@*             <div class="book-info"> *@
@*                 <h1>@Model.Title</h1> *@
@*                 <p>By <strong>@Model.Author</strong></p> *@
@*                 <p>Publisher: <strong>@Model.Publisher</strong> | Year: <strong>@Model.PublisheYear</strong></p> *@

@*                 @if (Model.IsDiscounted) *@
@*                 { *@
@*                     <p class="price"> *@
@*                         <del>$@Model.Price</del> *@
@*                         <span class="discount-price">$@Model.DiscountPrice</span> *@
@*                     </p> *@
@*                 } *@
@*                 else *@
@*                 { *@
@*                     <p class="price">$@Model.Price</p> *@
@*                 } *@

@*                 <p class="description">@Model.Description</p> *@
@*                 <div class="buttons"> *@
@*                     <a href="@Url.Action("Buy", "Book", new { id = Model.Id })" class="button buy-btn">Buy Now</a> *@
@*                     <a href="@Url.Action("AddToCart", "Cart", new { id = Model.Id })" class="button cart-btn">Add to Cart</a> *@
@*                     @if (Model.IsBorrowable) *@
@*                     { *@
@*                         <a href="@Url.Action("Borrow", "Book", new { id = Model.Id })" class="button borrow-btn">Borrow</a> *@
@*                     } *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@

@*         <!-- Rating and Comment Section --> *@
@*         <div class="rating-section"> *@
@*             <form id="ratingForm" method="post" enctype="multipart/form-data" action="@Url.Action("SubmitRating", "Book")"> *@
@*                 <input type="hidden" name="BookId" value="@Model.Id" /> *@
@*                 <label for="rating">Rate this book:</label> *@
@*                 <div class="rating-stars"> *@
@*                     <input type="radio" name="Rating" id="star5" value="5"><label for="star5">★</label> *@
@*                     <input type="radio" name="Rating" id="star4" value="4"><label for="star4">★</label> *@
@*                     <input type="radio" name="Rating" id="star3" value="3"><label for="star3">★</label> *@
@*                     <input type="radio" name="Rating" id="star2" value="2"><label for="star2">★</label> *@
@*                     <input type="radio" name="Rating" id="star1" value="1"><label for="star1">★</label> *@
@*                 </div> *@

@*                 <textarea name="Comment" placeholder="Write your comment here..."></textarea> *@
@*                 <div> *@
@*                     <label for="Photo">Upload Photo:</label> *@
@*                     <input type="file" name="Photo" id="Photo" /> *@
@*                 </div> *@
@*                 <button type="submit" class="button">Submit Rating</button> *@
@*             </form> *@
@*             <div id="successMessage" style="display: none;">Rating submitted successfully!</div> *@
@*             <div class="book-rating" style="margin-top: 20px;"> *@
@*                 <h4> *@
@*                     Average Rating: *@
@*                     @(Model.AverageRating.HasValue ? Model.AverageRating.Value.ToString("0.0") : "Not Rated Yet") *@
@*                 </h4> *@
               
@*             </div> *@

@*     <!-- AJAX Script --> *@
@*     <script> *@
@*         const form = document.getElementById("ratingForm"); *@
@*         form.addEventListener("submit", function (e) { *@
@*             e.preventDefault(); *@

@*             const formData = new FormData(form); *@

@*             fetch(form.action, { *@
@*                 method: "POST", *@
@*                 body: formData *@
@*             }) *@
@*             .then(response => { *@
@*                 if (response.ok) { *@
@*                     alert("Rating submitted successfully!"); *@
@*                     form.reset(); *@
@*                 } else { *@
@*                     alert("Something went wrong!"); *@
@*                 } *@
@*             }) *@
@*             .catch(error => console.error("Error:", error)); *@
@*         }); *@
@*     </script> *@
@* </body> *@
@* </html> *@
