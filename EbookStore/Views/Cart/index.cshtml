@model IEnumerable<EbookStore.Models.CartItems>

<h2>Your Cart</h2>

@if (!Model.Any())
{
    <p>Your cart is empty.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Book</th>
                <th>Transaction Type</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Book.Title</td>
                    <td>@item.TransactionType</td>
                    <td>@item.Quantity</td>
                    <td>@(item.TransactionType == "Buy" ? item.Book.Price : item.Book.BorrowPrice)</td>
                    <td>@(item.TransactionType == "Buy" ? item.Book.Price * item.Quantity : item.Book.BorrowPrice * item.Quantity)</td>
                </tr>
            }
        </tbody>
    </table>

    <h4>Total: @Model.Sum(item => item.TransactionType == "Buy" ? item.Book.Price * item.Quantity : item.Book.BorrowPrice * item.Quantity)</h4>

    <div id="paypal-button-container"></div>
}
<form action="/Cart/Checkout" method="post">
    @* <button type="submit" class="btn btn-primary">Checkout with PayPal</button> *@
</form>

<script src="https://www.paypal.com/sdk/js?client-id=AV8bBCDpoCX38F6pEGoVIh5H8aFnjpg7wgqcr75-N3aFBZlW4WUPIdzDoH36kWxICqWa4nGsR2PgGNTV"></script>

<div id="paypal-button-container"></div>
<script src="https://www.paypal.com/sdk/js?client-id=AV8bBCDpoCX38F6pEGoVIh5H8aFnjpg7wgqcr75-N3aFBZlW4WUPIdzDoH36kWxICqWa4nGsR2PgGNTV"></script>

<div id="paypal-button-container"></div>
<script>
    paypal.Buttons({
        createOrder: function (data, actions) {
            // Call your server to create the order
            return fetch('/Payment/CreateOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(function (response) {
                if (!response.ok) {
                    throw new Error('Failed to create order');
                }
                return response.json();
            })
            .then(function (data) {
                console.log('Order ID:', data.orderID); // Debug
                return data.orderID;
            })
            .catch(function (error) {
                console.error('CreateOrder Error:', error);
            });
        },
        onApprove: function (data, actions) {
            // Call your server to capture the order
            return fetch(`/Payment/CaptureOrder?orderId=${data.orderID}`, {
                method: 'POST'
            })
            .then(function (response) {
                if (!response.ok) {
                    throw new Error('Failed to capture order');
                }
                return response.json();
            })
            .then(function (details) {
                console.log('Transaction Completed:', details);
                alert('Transaction completed by ' + details.payer.name.given_name);
            })
            .catch(function (error) {
                console.error('CaptureOrder Error:', error);
            });
        }
    }).render('#paypal-button-container'); // Render PayPal button

</script>
<script src="https://www.paypal.com/sdk/js?client-id=AV8bBCDpoCX38F6pEGoVIh5H8aFnjpg7wgqcr75-N3aFBZlW4WUPIdzDoH36kWxICqWa4nGsR2PgGNTV&currency=USD"></script>
